{
  "hash": "2732ae10f06b2031d1c4daffe241ec5f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 2 Benchmarks\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/jacobubafu/Desktop/WebsitePortfolio/jacobperez-debug.github.io\n```\n\n\n:::\n\n```{.r .cell-code}\nwgm2018 <- read_excel(here::here(\"data/wgm2018-dataset-crosstabs-all-countries.xlsx\"), sheet = 2)\n\nwgm20183 <- read_excel(here::here(\"data/wgm2018-dataset-crosstabs-all-countries.xlsx\"), sheet = 3)\n```\n:::\n\n\n\n\n6.  Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gganimate)\n\ndf_raw <- tibble(x = str_split(wgm20183$`Variable Type & Codes*`[1], ',\\\\s')[[1]])\n\ndf_countries <- df_raw |>\n  separate_wider_delim(x, delim = '=', names = c(\"country_id\", \"country_name\")) |>\n  mutate(country_id = as.numeric(country_id))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwgm2018_joined <-  left_join(wgm2018, df_countries, by = c(\"WP5\" = \"country_id\")) |>\n  mutate(region = case_when(\n    Regions_Report %in% c(1, 2, 4, 5) ~ \"Africa\",\n    Regions_Report %in% c(6, 7, 8) ~ \"Americas\",\n    Regions_Report %in% c(9, 10, 11, 12, 18) ~ \"Asia\",\n    Regions_Report %in% c(3, 13) ~ \"Middle East and North Africa\",\n    Regions_Report %in% c(14) ~ \"Former Soviet Union\",\n    Regions_Report %in% c(15, 16, 17, 0) ~ \"Europe\"\n  )) |>\n  select(country_name, region, wgt, PROJWT, Q25, Q9, Q8, Q6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df <- wgm2018_joined |>\n  filter(!is.na(Q25)) |>\n  group_by(country_name, region) |>\n  summarise(\n    total_responses = n(),\n    count = sum(Q25 %in% c(1, 2)),\n    prop = count / total_responses\n  ) |>\n  select(country_name, region, prop) %>%\n  mutate(country_name = if_else(country_name == \"Northern Cyprus,\", \"Northern Cyprus\", country_name))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'country_name'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(wgm2018_joined, here::here(\"data/wgm2018_joined.csv\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(summary_df, here::here(\"data/summary_df.csv\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}